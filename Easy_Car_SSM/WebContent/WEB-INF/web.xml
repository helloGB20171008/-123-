<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>Easy_Car_SSM</display-name>
 <servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 用于配置spring mvc的配置文件的位置和名称,这里说明会新建一个springmvc.xml的配置文件 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	
	<!-- 配置spring配置文件applicationContext.xml -->
  <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
		<!-- 因为mybatis在applicationContext.xml配置过了，所以不用配置它了 -->
	</context-param>
	
	 <!-- 配置ContextLoaderListener监听器  扫描所有xml配置文件 -->
 		 <listener> 
         <listener-class> 
            org.springframework.web.context.ContextLoaderListener 
         </listener-class> 
		</listener>
  
  
<!-- 配置过滤器 -->
		  <filter>
  <filter-name>c</filter-name>
  <filter-class>com.easy.filter.CharacterFilter</filter-class>
  </filter>
  <filter-mapping>
  <filter-name>c</filter-name>
  <url-pattern>/*</url-pattern>
  </filter-mapping>
  
</web-app>